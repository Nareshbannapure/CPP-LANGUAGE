Question : 1

#include <iostream>
using namespace std;

class ExceptionHandler {
public:
    void demonstrateExceptions() {
        try {
            // Code that may throw exceptions
            int numerator, denominator, result;

            cout << "Enter numerator: ";
            cin >> numerator;

            cout << "Enter denominator: ";
            cin >> denominator;

            if (denominator == 0) {
                throw "Division by zero is not allowed.";
            }

            result = numerator / denominator;

            cout << "Result of division: " << result << endl;
        } catch (...) {
            // Catch block for handling all types of exceptions
            cerr << "An exception occurred." << endl;
        }
    }
};

int main() {
    ExceptionHandler handler;
    handler.demonstrateExceptions();

    return 0;
}


Question : 2

include <iostream>
using namespace std;

class AgeException {
public:
    AgeException(const char* message) : message(message) {}

    const char* what() const {
        return message;
    }

private:
    const char* message;
};

class VotingEligibility {
public:
    void checkEligibility(int age) {
        if (age < 18) {
            throw AgeException("You are not eligible to vote.");
        } else {
            cout << "You are eligible to vote." << endl;
        }
    }
};

int main() {
    try {
        VotingEligibility eligibilityChecker;
        
        int userAge;
        cout << "Enter your age: ";
        cin >> userAge;

        eligibilityChecker.checkEligibility(userAge);
    } catch (const AgeException& e) {
        cerr << "Exception: " << e.what() << endl;
    }

    return 0;
}
